{"ast":null,"code":"var _jsxFileName = \"/Users/MarionC/Desktop/Brainstation/InStock/client/in-stock/src/components/CreateProduct.js\";\nimport React from \"react\";\nimport Switch from \"react-switch\";\nimport AddButton from \"./AddButton\";\n\nclass CreateProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newProduct: {\n        product: \"\",\n        ordered: \"\",\n        city: \"\",\n        country: \"Canada\",\n        quantity: 0,\n        status: true,\n        description: \"Description\"\n      },\n      fields: {},\n      erros: {}\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"product\"]) {\n      formIsValid = false;\n      errors[\"product\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"ordered\"]) {\n      formIsValid = false;\n      errors[\"ordered\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"ordered\"] !== \"undefined\") {\n      if (!fields[\"ordered\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"ordered\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"city\"]) {\n      formIsValid = false;\n      errors[\"city\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"country\"]) {\n      formIsValid = false;\n      errors[\"country\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"quantity\"]) {\n      formIsValid = false;\n      errors[\"quantity\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"quantity\"] !== \"undefined\") {\n      if (!fields[\"quantity\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"quantity\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"status\"]) {\n      formIsValid = false;\n      errors[\"status\"] = \"Cannot be empty\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    const submitHandler = event => {\n      event.preventDefault();\n      const product = event.target.product;\n      let productinput = product.value;\n      const ordered = event.target.ordered;\n      let orderedinput = ordered.value;\n      const city = event.target.city;\n      let cityinput = city.value;\n      const country = event.target.country;\n      let countryinput = country.value;\n      const quantity = event.target.quantity;\n      let quantityinput = quantity.value;\n      const status = event.target.status;\n      let statusinput = status.value;\n      const description = event.target.description;\n      let descriptioninput = description.value;\n      axios.post(\"http://localhost\", {\n        product: productinput,\n        ordered: orderedinput,\n        city: cityinput,\n        country: countryinput,\n        quantity: quantityinput,\n        status: statusinput,\n        description: descriptioninput\n      });\n      product.value = \"\";\n      ordered.value = \"\";\n      city.value = \"\";\n      country.value = \"\";\n      quantity.value = \"\";\n      status.value = \"\";\n      description.value = \"\";\n    };\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"createnew\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"createnew__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Create New\"), React.createElement(\"div\", {\n      className: \"createnew__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"product\",\n      placeholder: \"Item Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Last Ordered\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"ordered\",\n      placeholder: \"yyyy-mm-dd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"city\",\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      id: \"selectdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"select\", {\n      name: \"country\",\n      id: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Canada\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Canada\"), React.createElement(\"option\", {\n      value: \"USA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"USA\"), React.createElement(\"option\", {\n      value: \"France\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"France\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"quantity\",\n      placeholder: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"div\", {\n      id: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"In stock\"), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Item Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      placeholder: \"(Optional)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      id: \"Cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Cancel\"))))), React.createElement(AddButton, {\n      Popup: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CreateProduct;","map":{"version":3,"sources":["/Users/MarionC/Desktop/Brainstation/InStock/client/in-stock/src/components/CreateProduct.js"],"names":["React","Switch","AddButton","CreateProduct","Component","state","newProduct","product","ordered","city","country","quantity","status","description","fields","erros","handleValidation","errors","formIsValid","match","setState","render","submitHandler","event","preventDefault","target","productinput","value","orderedinput","cityinput","countryinput","quantityinput","statusinput","descriptioninput","axios","post"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Switch from \"react-switch\";\nimport AddButton from \"./AddButton\";\n\nclass CreateProduct extends React.Component {\n  state = {\n    newProduct: {\n      product: \"\",\n      ordered: \"\",\n      city: \"\",\n      country: \"Canada\",\n      quantity: 0,\n      status: true,\n      description: \"Description\"\n    },\n    fields: {},\n    erros: {}\n  };\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"product\"]) {\n      formIsValid = false;\n      errors[\"product\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"ordered\"]) {\n      formIsValid = false;\n      errors[\"ordered\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"ordered\"] !== \"undefined\") {\n      if (!fields[\"ordered\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"ordered\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"city\"]) {\n      formIsValid = false;\n      errors[\"city\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"country\"]) {\n      formIsValid = false;\n      errors[\"country\"] = \"Cannot be empty\";\n    }\n    if (!fields[\"quantity\"]) {\n      formIsValid = false;\n      errors[\"quantity\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"quantity\"] !== \"undefined\") {\n      if (!fields[\"quantity\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"quantity\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"status\"]) {\n      formIsValid = false;\n      errors[\"status\"] = \"Cannot be empty\";\n    }\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n  render() {\n    const submitHandler = event => {\n      event.preventDefault();\n      const product = event.target.product;\n      let productinput = product.value;\n      const ordered = event.target.ordered;\n      let orderedinput = ordered.value;\n      const city = event.target.city;\n      let cityinput = city.value;\n      const country = event.target.country;\n      let countryinput = country.value;\n      const quantity = event.target.quantity;\n      let quantityinput = quantity.value;\n      const status = event.target.status;\n      let statusinput = status.value;\n      const description = event.target.description;\n      let descriptioninput = description.value;\n\n      axios.post(`http://localhost`, {\n        product: productinput,\n        ordered: orderedinput,\n        city: cityinput,\n        country: countryinput,\n        quantity: quantityinput,\n        status: statusinput,\n        description: descriptioninput\n      });\n\n      product.value = \"\";\n      ordered.value = \"\";\n      city.value = \"\";\n      country.value = \"\";\n      quantity.value = \"\";\n      status.value = \"\";\n      description.value = \"\";\n    };\n\n    return (\n      <>\n        <div className=\"createnew\">\n          <h1 className=\"createnew__title\">Create New</h1>\n          <div className=\"createnew__form\">\n            <form onSubmit={submitHandler}>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>Product</label>\n                  <input type=\"text\" id=\"product\" placeholder=\"Item Name\" />\n                </div>\n                <div className=\"column\">\n                  <label>Last Ordered</label>\n                  <input type=\"text\" id=\"ordered\" placeholder=\"yyyy-mm-dd\" />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>City</label>\n                  <input type=\"text\" id=\"city\" placeholder=\"City\" />\n                </div>\n                <div className=\"column\" id=\"selectdiv\">\n                  <label>Country</label>\n                  <select name=\"country\" id=\"country\">\n                    <option value=\"Canada\" selected>\n                      Canada\n                    </option>\n                    <option value=\"USA\">USA</option>\n                    <option value=\"France\">France</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>Quantity</label>\n                  <input type=\"text\" id=\"quantity\" placeholder=\"0\" />\n                </div>\n                <div className=\"column\">\n                  <label>Status</label>\n                  <div id=\"status\">\n                    <p>In stock</p>\n                    <Switch />\n                  </div>\n                </div>\n              </div>\n              <label>Item Description</label>\n              <input type=\"text\" id=\"description\" placeholder=\"(Optional)\" />\n              <div className=\"form__buttons\">\n                <button id=\"Save\">Save</button>\n                <button id=\"Cancel\">Cancel</button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <AddButton Popup={this.state} />\n      </>\n    );\n  }\n}\n\nexport default CreateProduct;\n"]},"metadata":{},"sourceType":"module"}