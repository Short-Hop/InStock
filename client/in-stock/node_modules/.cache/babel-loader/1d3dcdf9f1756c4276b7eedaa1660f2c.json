{"ast":null,"code":"var _jsxFileName = \"/Users/MarionC/Desktop/Brainstation/InStock/client/in-stock/src/components/CreateProduct.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Switch from \"react-switch\";\nimport AddButton from \"./AddButton\";\n\nclass CreateProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newProduct: {\n        product: \"\",\n        ordered: \"\",\n        city: \"\",\n        country: \"Canada\",\n        quantity: 0,\n        status: true,\n        description: \"Description\"\n      },\n      fields: {},\n      erros: {},\n      displayForm: false\n    };\n\n    this.toggleForm = () => {\n      if (!this.state.displayForm) {\n        this.setState({\n          displayForm: true\n        });\n      } else {\n        this.setState({\n          displayForm: false\n        });\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const product = event.target.product;\n      let productinput = product.value;\n      const ordered = event.target.ordered;\n      let orderedinput = ordered.value;\n      const city = event.target.city;\n      let cityinput = city.value;\n      const country = event.target.country;\n      let countryinput = country.value;\n      const quantity = event.target.quantity;\n      let quantityinput = quantity.value;\n      const status = event.target.status; // let statusinput = status.value;\n\n      const description = event.target.description;\n      let descriptioninput = description.value;\n      axios.post(\"http://localhost\", {\n        product: productinput,\n        ordered: orderedinput,\n        city: cityinput,\n        country: countryinput,\n        quantity: quantityinput,\n        // status: statusinput,\n        description: descriptioninput\n      });\n      product.value = \"\";\n      ordered.value = \"\";\n      city.value = \"\";\n      country.value = \"\";\n      quantity.value = \"\"; // status.value = \"\";\n\n      description.value = \"\"; // if (this.handleValidation()) {\n      //   alert(\"Form submitted\");\n      // } else {\n      //   alert(\"Form has errors.\");\n      // }\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"product\"]) {\n      formIsValid = false;\n      errors[\"product\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"ordered\"]) {\n      formIsValid = false;\n      errors[\"ordered\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"ordered\"] !== \"undefined\") {\n      if (!fields[\"ordered\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"ordered\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"city\"]) {\n      formIsValid = false;\n      errors[\"city\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"country\"]) {\n      formIsValid = false;\n      errors[\"country\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"quantity\"]) {\n      formIsValid = false;\n      errors[\"quantity\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"quantity\"] !== \"undefined\") {\n      if (!fields[\"quantity\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"quantity\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"status\"]) {\n      formIsValid = false;\n      errors[\"status\"] = \"Cannot be empty\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    let form;\n\n    if (this.state.displayForm) {\n      form = React.createElement(\"div\", {\n        className: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createnew\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"createnew__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Create New\"), React.createElement(\"div\", {\n        className: \"createnew__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Product\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"product\",\n        placeholder: \"Item Name\",\n        onChange: this.handleChange.bind(this, \"product\"),\n        value: this.state.fields[\"product\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Last Ordered\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"ordered\",\n        placeholder: \"yyyy-mm-dd\",\n        onChange: this.handleChange.bind(this, \"ordered\"),\n        value: this.state.fields[\"ordered\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"City\",\n        onChange: this.handleChange.bind(this, \"city\"),\n        value: this.state.fields[\"city\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        id: \"selectdiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Country\"), React.createElement(\"select\", {\n        name: \"country\",\n        id: \"country\",\n        onChange: this.handleChange.bind(this, \"country\"),\n        value: this.state.fields[\"country\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Canada\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Canada\"), React.createElement(\"option\", {\n        value: \"USA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"USA\"), React.createElement(\"option\", {\n        value: \"France\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"France\")))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        placeholder: \"0\",\n        onChange: this.handleChange.bind(this, \"quantity\"),\n        value: this.state.fields[\"quantity\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"div\", {\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"In stock\"), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Item Description\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"description\",\n        placeholder: \"(Optional)\",\n        onChange: this.handleChange.bind(this, \"description\"),\n        value: this.state.fields[\"description\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form__buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"Save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Save\"), React.createElement(\"button\", {\n        id: \"Cancel\",\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Cancel\"))))));\n    }\n\n    return React.createElement(React.Fragment, null, form, React.createElement(AddButton, {\n      Popup: this.toggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }));\n  }\n\n} // class Switch extends Component {\n//   constructor() {\n//     super();\n//     this.state = { checked: false };\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n//   handleChange(checked) {\n//     this.setState({ checked });\n//   }\n//   render() {\n//     return (\n//       <label>\n//         <Switch\n//           uncheckedIcon={false}\n//           checkedIcon={false}\n//           onChange={this.handleChange}\n//           checked={this.state.checked}\n//           onColor={\"#00B200\"}\n//         />\n//       </label>\n//     );\n//   }\n// }\n\n\nexport default CreateProduct;","map":{"version":3,"sources":["/Users/MarionC/Desktop/Brainstation/InStock/client/in-stock/src/components/CreateProduct.js"],"names":["React","axios","Switch","AddButton","CreateProduct","Component","state","newProduct","product","ordered","city","country","quantity","status","description","fields","erros","displayForm","toggleForm","setState","submitHandler","event","preventDefault","target","productinput","value","orderedinput","cityinput","countryinput","quantityinput","descriptioninput","post","handleValidation","errors","formIsValid","match","handleChange","field","e","render","form","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Switch from \"react-switch\";\nimport AddButton from \"./AddButton\";\n\nclass CreateProduct extends React.Component {\n  state = {\n    newProduct: {\n      product: \"\",\n      ordered: \"\",\n      city: \"\",\n      country: \"Canada\",\n      quantity: 0,\n      status: true,\n      description: \"Description\"\n    },\n    fields: {},\n    erros: {},\n\n    displayForm: false,\n  };\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"product\"]) {\n      formIsValid = false;\n      errors[\"product\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"ordered\"]) {\n      formIsValid = false;\n      errors[\"ordered\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"ordered\"] !== \"undefined\") {\n      if (!fields[\"ordered\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"ordered\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"city\"]) {\n      formIsValid = false;\n      errors[\"city\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"country\"]) {\n      formIsValid = false;\n      errors[\"country\"] = \"Cannot be empty\";\n    }\n    if (!fields[\"quantity\"]) {\n      formIsValid = false;\n      errors[\"quantity\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"quantity\"] !== \"undefined\") {\n      if (!fields[\"quantity\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"quantity\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"status\"]) {\n      formIsValid = false;\n      errors[\"status\"] = \"Cannot be empty\";\n    }\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({ fields });\n  }\n\n  toggleForm = () => {\n\n    if(!this.state.displayForm) {\n      this.setState({\n        displayForm: true,\n      })\n    } else {\n      this.setState({\n        displayForm: false,\n      })\n    }\n      \n  }\n\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    const product = event.target.product;\n    let productinput = product.value;\n    const ordered = event.target.ordered;\n    let orderedinput = ordered.value;\n    const city = event.target.city;\n    let cityinput = city.value;\n    const country = event.target.country;\n    let countryinput = country.value;\n    const quantity = event.target.quantity;\n    let quantityinput = quantity.value;\n    const status = event.target.status;\n    // let statusinput = status.value;\n    const description = event.target.description;\n    let descriptioninput = description.value;\n\n    axios.post(`http://localhost`, {\n      product: productinput,\n      ordered: orderedinput,\n      city: cityinput,\n      country: countryinput,\n      quantity: quantityinput,\n      // status: statusinput,\n      description: descriptioninput\n  });\n\n  product.value = \"\";\n  ordered.value = \"\";\n  city.value = \"\";\n  country.value = \"\";\n  quantity.value = \"\";\n  // status.value = \"\";\n  description.value = \"\";\n\n    // if (this.handleValidation()) {\n    //   alert(\"Form submitted\");\n    // } else {\n    //   alert(\"Form has errors.\");\n    // }\n\n}\n  render() {\n    let form;\n    if (this.state.displayForm) {\n      form = \n      <div className=\"shadow\">\n        <div className=\"createnew\">\n          <h1 className=\"createnew__title\">Create New</h1>\n          <div className=\"createnew__form\">\n            <form onSubmit={this.submitHandler}>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>Product</label>\n                  <input\n                    type=\"text\"\n                    id=\"product\"\n                    placeholder=\"Item Name\"\n                    onChange={this.handleChange.bind(this, \"product\")}\n                    value={this.state.fields[\"product\"]}\n                  />\n                </div>\n                <div className=\"column\">\n                  <label>Last Ordered</label>\n                  <input\n                    type=\"text\"\n                    id=\"ordered\"\n                    placeholder=\"yyyy-mm-dd\"\n                    onChange={this.handleChange.bind(this, \"ordered\")}\n                    value={this.state.fields[\"ordered\"]}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>City</label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    placeholder=\"City\"\n                    onChange={this.handleChange.bind(this, \"city\")}\n                    value={this.state.fields[\"city\"]}\n                  />\n                </div>\n                <div className=\"column\" id=\"selectdiv\">\n                  <label>Country</label>\n                  <select\n                    name=\"country\"\n                    id=\"country\"\n                    onChange={this.handleChange.bind(this, \"country\")}\n                    value={this.state.fields[\"country\"]}\n                  >\n                    <option value=\"Canada\" selected>\n                      Canada\n                      </option>\n                    <option value=\"USA\">USA</option>\n                    <option value=\"France\">France</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>Quantity</label>\n                  <input\n                    type=\"text\"\n                    id=\"quantity\"\n                    placeholder=\"0\"\n                    onChange={this.handleChange.bind(this, \"quantity\")}\n                    value={this.state.fields[\"quantity\"]}\n                  />\n                </div>\n                <div className=\"column\">\n                  <label>Status</label>\n                  <div id=\"status\">\n                    <p>In stock</p>\n                    <Switch />\n                  </div>\n                </div>\n              </div>\n              <label>Item Description</label>\n              <input\n                type=\"text\"\n                id=\"description\"\n                placeholder=\"(Optional)\"\n                onChange={this.handleChange.bind(this, \"description\")}\n                value={this.state.fields[\"description\"]}\n              />\n              <div className=\"form__buttons\">\n                <button id=\"Save\">Save</button>\n                <button id=\"Cancel\" onClick={this.toggleForm}>Cancel</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    }\n\n    \n\n    return (\n      <>\n        {form}\n        <AddButton Popup={this.toggleForm} />\n      </>\n    );\n  }\n}\n\n// class Switch extends Component {\n//   constructor() {\n//     super();\n//     this.state = { checked: false };\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n\n//   handleChange(checked) {\n//     this.setState({ checked });\n//   }\n\n//   render() {\n//     return (\n//       <label>\n//         <Switch\n//           uncheckedIcon={false}\n//           checkedIcon={false}\n//           onChange={this.handleChange}\n//           checked={this.state.checked}\n//           onColor={\"#00B200\"}\n//         />\n//       </label>\n//     );\n//   }\n// }\nexport default CreateProduct;\n"]},"metadata":{},"sourceType":"module"}