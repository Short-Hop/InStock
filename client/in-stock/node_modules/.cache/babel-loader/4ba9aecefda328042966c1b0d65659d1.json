{"ast":null,"code":"var _jsxFileName = \"/Users/MarionC/Desktop/Brainstation/InStock/client/in-stock/src/components/CreateProduct.js\";\nimport React from \"react\";\nimport Switch from \"react-switch\";\nimport AddButton from \"./AddButton\";\n\nclass CreateProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newProduct: {\n        product: \"\",\n        ordered: \"\",\n        city: \"\",\n        country: \"Canada\",\n        quantity: 0,\n        status: true,\n        description: \"Description\"\n      },\n      fields: {},\n      erros: {}\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"product\"]) {\n      formIsValid = false;\n      errors[\"product\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"ordered\"]) {\n      formIsValid = false;\n      errors[\"ordered\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"ordered\"] !== \"undefined\") {\n      if (!fields[\"ordered\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"ordered\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"city\"]) {\n      formIsValid = false;\n      errors[\"city\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"country\"]) {\n      formIsValid = false;\n      errors[\"country\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"quantity\"]) {\n      formIsValid = false;\n      errors[\"quantity\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"quantity\"] !== \"undefined\") {\n      if (!fields[\"quantity\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"quantity\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"status\"]) {\n      formIsValid = false;\n      errors[\"status\"] = \"Cannot be empty\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    const submitHandler = event => {\n      event.preventDefault();\n      const product = event.target.product;\n      let productinput = product.value;\n      const ordered = event.target.ordered;\n      let orderedinput = ordered.value;\n      const city = event.target.city;\n      let cityinput = city.value;\n      const country = event.target.country;\n      let countryinput = country.value;\n      const quantity = event.target.quantity;\n      let quantityinput = quantity.value;\n      const status = event.target.status; // let statusinput = status.value;\n\n      const description = event.target.description;\n      let descriptioninput = description.value;\n      axios.post(\"http://localhost\", {\n        product: productinput,\n        ordered: orderedinput,\n        city: cityinput,\n        country: countryinput,\n        quantity: quantityinput,\n        // status: statusinput,\n        description: descriptioninput\n      });\n      product.value = \"\";\n      ordered.value = \"\";\n      city.value = \"\";\n      country.value = \"\";\n      quantity.value = \"\"; // status.value = \"\";\n\n      description.value = \"\";\n\n      if (this.handleValidation()) {\n        alert(\"Form submitted\");\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"createnew\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"createnew__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Create New\"), React.createElement(\"div\", {\n      className: \"createnew__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"product\",\n      placeholder: \"Item Name\",\n      onChange: this.handleChange.bind(this, \"product\"),\n      value: this.state.fields[\"product\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Last Ordered\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"ordered\",\n      placeholder: \"yyyy-mm-dd\",\n      onChange: this.handleChange.bind(this, \"ordered\"),\n      value: this.state.fields[\"ordered\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"city\",\n      placeholder: \"City\",\n      onChange: this.handleChange.bind(this, \"city\"),\n      value: this.state.fields[\"city\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      id: \"selectdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"select\", {\n      name: \"country\",\n      id: \"country\",\n      onChange: this.handleChange.bind(this, \"country\"),\n      value: this.state.fields[\"country\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Canada\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Canada\"), React.createElement(\"option\", {\n      value: \"USA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"USA\"), React.createElement(\"option\", {\n      value: \"France\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"France\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"quantity\",\n      placeholder: \"0\",\n      onChange: this.handleChange.bind(this, \"quantity\"),\n      value: this.state.fields[\"quantity\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"div\", {\n      id: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"In stock\"), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Item Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      placeholder: \"(Optional)\",\n      onChange: this.handleChange.bind(this, \"description\"),\n      value: this.state.fields[\"description\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      id: \"Cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Cancel\"))))), React.createElement(AddButton, {\n      Popup: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CreateProduct;","map":{"version":3,"sources":["/Users/MarionC/Desktop/Brainstation/InStock/client/in-stock/src/components/CreateProduct.js"],"names":["React","Switch","AddButton","CreateProduct","Component","state","newProduct","product","ordered","city","country","quantity","status","description","fields","erros","handleValidation","errors","formIsValid","match","setState","handleChange","field","e","target","value","render","submitHandler","event","preventDefault","productinput","orderedinput","cityinput","countryinput","quantityinput","descriptioninput","axios","post","alert","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Switch from \"react-switch\";\nimport AddButton from \"./AddButton\";\n\nclass CreateProduct extends React.Component {\n  state = {\n    newProduct: {\n      product: \"\",\n      ordered: \"\",\n      city: \"\",\n      country: \"Canada\",\n      quantity: 0,\n      status: true,\n      description: \"Description\"\n    },\n    fields: {},\n    erros: {}\n  };\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"product\"]) {\n      formIsValid = false;\n      errors[\"product\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"ordered\"]) {\n      formIsValid = false;\n      errors[\"ordered\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"ordered\"] !== \"undefined\") {\n      if (!fields[\"ordered\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"ordered\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"city\"]) {\n      formIsValid = false;\n      errors[\"city\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"country\"]) {\n      formIsValid = false;\n      errors[\"country\"] = \"Cannot be empty\";\n    }\n    if (!fields[\"quantity\"]) {\n      formIsValid = false;\n      errors[\"quantity\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"quantity\"] !== \"undefined\") {\n      if (!fields[\"quantity\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"quantity\"] = \"Only numbers\";\n      }\n    }\n\n    if (!fields[\"status\"]) {\n      formIsValid = false;\n      errors[\"status\"] = \"Cannot be empty\";\n    }\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({ fields });\n  }\n  render() {\n    const submitHandler = event => {\n      event.preventDefault();\n      const product = event.target.product;\n      let productinput = product.value;\n      const ordered = event.target.ordered;\n      let orderedinput = ordered.value;\n      const city = event.target.city;\n      let cityinput = city.value;\n      const country = event.target.country;\n      let countryinput = country.value;\n      const quantity = event.target.quantity;\n      let quantityinput = quantity.value;\n      const status = event.target.status;\n      // let statusinput = status.value;\n      const description = event.target.description;\n      let descriptioninput = description.value;\n\n      axios.post(`http://localhost`, {\n        product: productinput,\n        ordered: orderedinput,\n        city: cityinput,\n        country: countryinput,\n        quantity: quantityinput,\n        // status: statusinput,\n        description: descriptioninput\n      });\n\n      product.value = \"\";\n      ordered.value = \"\";\n      city.value = \"\";\n      country.value = \"\";\n      quantity.value = \"\";\n      // status.value = \"\";\n      description.value = \"\";\n\n      if (this.handleValidation()) {\n        alert(\"Form submitted\");\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n\n    return (\n      <>\n        <div className=\"createnew\">\n          <h1 className=\"createnew__title\">Create New</h1>\n          <div className=\"createnew__form\">\n            <form onSubmit={submitHandler}>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>Product</label>\n                  <input\n                    type=\"text\"\n                    id=\"product\"\n                    placeholder=\"Item Name\"\n                    onChange={this.handleChange.bind(this, \"product\")}\n                    value={this.state.fields[\"product\"]}\n                  />\n                </div>\n                <div className=\"column\">\n                  <label>Last Ordered</label>\n                  <input\n                    type=\"text\"\n                    id=\"ordered\"\n                    placeholder=\"yyyy-mm-dd\"\n                    onChange={this.handleChange.bind(this, \"ordered\")}\n                    value={this.state.fields[\"ordered\"]}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>City</label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    placeholder=\"City\"\n                    onChange={this.handleChange.bind(this, \"city\")}\n                    value={this.state.fields[\"city\"]}\n                  />\n                </div>\n                <div className=\"column\" id=\"selectdiv\">\n                  <label>Country</label>\n                  <select\n                    name=\"country\"\n                    id=\"country\"\n                    onChange={this.handleChange.bind(this, \"country\")}\n                    value={this.state.fields[\"country\"]}\n                  >\n                    <option value=\"Canada\" selected>\n                      Canada\n                    </option>\n                    <option value=\"USA\">USA</option>\n                    <option value=\"France\">France</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"column\">\n                  <label>Quantity</label>\n                  <input\n                    type=\"text\"\n                    id=\"quantity\"\n                    placeholder=\"0\"\n                    onChange={this.handleChange.bind(this, \"quantity\")}\n                    value={this.state.fields[\"quantity\"]}\n                  />\n                </div>\n                <div className=\"column\">\n                  <label>Status</label>\n                  <div id=\"status\">\n                    <p>In stock</p>\n                    <Switch />\n                  </div>\n                </div>\n              </div>\n              <label>Item Description</label>\n              <input\n                type=\"text\"\n                id=\"description\"\n                placeholder=\"(Optional)\"\n                onChange={this.handleChange.bind(this, \"description\")}\n                value={this.state.fields[\"description\"]}\n              />\n              <div className=\"form__buttons\">\n                <button id=\"Save\">Save</button>\n                <button id=\"Cancel\">Cancel</button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <AddButton Popup={this.state} />\n      </>\n    );\n  }\n}\n\nexport default CreateProduct;\n"]},"metadata":{},"sourceType":"module"}